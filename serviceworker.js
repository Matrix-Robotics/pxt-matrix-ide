function initWebappServiceWorker(){const e="@relprefix@".replace("---","").replace(/^\//,""),s=-1===e.indexOf("/"),t="makecode;"+e+";@pxtRelId@",l=["@targetUrl@/"+e,"@simUrl@","/pxt-matrix-ide/semantic.js","/pxt-matrix-ide/main.js","/pxt-matrix-ide/pxtapp.js","/pxt-matrix-ide/typescript.js","/pxt-matrix-ide/marked/marked.min.js","/pxt-matrix-ide/highlight.js/highlight.pack.js","/pxt-matrix-ide/jquery.js","/pxt-matrix-ide/pxtlib.js","/pxt-matrix-ide/pxtcompiler.js","/pxt-matrix-ide/pxtpy.js","/pxt-matrix-ide/pxtblockly.js","/pxt-matrix-ide/pxtwinrt.js","/pxt-matrix-ide/pxteditor.js","/pxt-matrix-ide/pxtsim.js","/pxt-matrix-ide/pxtembed.js","/pxt-matrix-ide/pxtworker.js","/pxt-matrix-ide/pxtweb.js","/pxt-matrix-ide/blockly.css","/pxt-matrix-ide/semantic.css","/pxt-matrix-ide/rtlsemantic.css","/pxt-matrix-ide/blockly/media/sprites.png","/pxt-matrix-ide/blockly/media/click.mp3","/pxt-matrix-ide/blockly/media/disconnect.wav","/pxt-matrix-ide/blockly/media/delete.mp3","/pxt-matrix-ide/vs/loader.js","/pxt-matrix-ide/vs/base/worker/workerMain.js","/pxt-matrix-ide/vs/basic-languages/bat/bat.js","/pxt-matrix-ide/vs/basic-languages/cpp/cpp.js","/pxt-matrix-ide/vs/basic-languages/python/python.js","/pxt-matrix-ide/vs/basic-languages/markdown/markdown.js","/pxt-matrix-ide/vs/editor/editor.main.css","/pxt-matrix-ide/vs/editor/editor.main.js","/pxt-matrix-ide/vs/editor/editor.main.nls.js","/pxt-matrix-ide/vs/language/json/jsonMode.js","/pxt-matrix-ide/vs/language/json/jsonWorker.js","/pxt-matrix-ide/smoothie/smoothie_compressed.js","/pxt-matrix-ide/images/Bars_black.gif","/pxt-matrix-ide/gifjs/gif.js","/pxt-matrix-ide/ai.0.js","/pxt-matrix-ide/target.js","","","","@targetUrl@/pxt-matrix-ide/monacoworker.js","@targetUrl@/pxt-matrix-ide/worker.js"],n=c(""),i=c("%2Fpxt-matrix-ide%2Fdocs%2Fstatic%2Flogo.svg;%2Fpxt-matrix-ide%2Fdocs%2Fstatic%2Flogo.svg;%2Fpxt-matrix-ide%2Fdocs%2Fstatic%2Flogo.svg;%2Fpxt-matrix-ide%2Fdocs%2Fstatic%2Flogo.svg;%2Fpxt-matrix-ide%2Fdocs%2Fstatic%2FMicrosoft-logo_rgb_c-gray-square.png;%2Fpxt-matrix-ide%2Fdocs%2Fstatic%2FMicrosoft-logo_rgb_c-gray.png;%2Fpxt-matrix-ide%2Fdocs%2Fstatic%2Fhero.jpg"),r=a(l.concat(i).map((e=>e.trim())).filter((e=>!!e&&0!==e.indexOf("@"))));let o=!1;function a(e){const s=[];for(const t of e)-1===s.indexOf(t)&&s.push(t);return s}function c(e){const s=String.fromCharCode(64)+"cdnUrl"+String.fromCharCode(64);return a(e.split(";").map((e=>decodeURIComponent(e).replace(s,"@cdnUrl@").trim())))}self.addEventListener("install",(e=>{s?(o=!0,console.log("Installing service worker..."),e.waitUntil(caches.open(t).then((e=>(console.log("Opened cache"),console.log("Caching:\n"+r.join("\n")),e.addAll(r).then((()=>e))))).then((e=>e.addAll(n).catch((e=>{console.log("Failed to cache hexfiles")})))).then((()=>self.skipWaiting())))):console.log("Skipping service worker install for unnamed endpoint")})),self.addEventListener("activate",(l=>{s?(console.log("Activating service worker..."),l.waitUntil(caches.keys().then((s=>{const l=s.filter((s=>{const l=function(e){const s=e.split(";");return 3!==s.length?null:s[1]}(s);return null===l||l===e&&s!==t}));return Promise.all(l.map((e=>caches.delete(e))))})).then((()=>o?(o=!1,function(){const s=self;return s.clients.claim().then((()=>s.clients.matchAll())).then((s=>{s.forEach((s=>s.postMessage({type:"serviceworker",state:"activated",ref:e})))}))}()):Promise.resolve())))):console.log("Skipping service worker activate for unnamed endpoint")})),self.addEventListener("fetch",(e=>{e.respondWith(caches.match(e.request).then((s=>s||fetch(e.request))))}))}initWebappServiceWorker();